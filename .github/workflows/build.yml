name: CI
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Checkout frontend repo
        uses: actions/checkout@v2
        with:
          repository: Aladex/gopds-frontend
          path: frontend

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1'

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install dependencies
        run: cd frontend && yarn install && yarn build

      - name: Install bindata and build templates for email
        run: go get -u github.com/go-bindata/go-bindata/... && go mod download && go-bindata -pkg email -o email/bindata.go -fs -prefix "email/templates" email/templates/...

      - name: Create bindata for frontend
        run: go-bindata -o cmd/bindata.go -fs -prefix "frontend/dist" frontend/dist/...

      - name: Make a binary
        run: go build -ldflags "-w -s" -o bin/gopds cmd/* && rm -Rf external_fb2mobi

      - name: Download fb2mobi
        run: |
              sudo apt install xz-utils \
              && curl -L https://github.com/rupor-github/fb2mobi/releases/download/3.6.67/fb2mobi_cli_linux_x86_64_glibc_2.23.tar.xz -o fb2mobi.tar.xz \
              && mkdir external_fb2mobi && tar -xf fb2mobi.tar.xz -C external_fb2mobi

      - name: Create artifacts
        run: |
              mkdir gopds && \
              mv bin/gopds gopds/gopds &&  \
              mv external_fb2mobi gopds/external_fb2mobi && \
              zip -r gopds.zip gopds

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: gopds.zip
          asset_name: gopds-release.zip
          asset_content_type: application/zip